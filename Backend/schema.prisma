datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int                  @id @default(autoincrement())
  email       String               @unique
  name        String?
  password    String
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @default(now())
  collections UsersOnCollections[]
  products    UsersOnProducts[]
}

model Collection {
  id          Int                  @id @default(autoincrement())
  name        String               @unique
  year        Int
  files       String[]
  brand       Brand                @default(KINDER)
  type        Type                 @default(DIFFICULT)
  status      Status               @default(EMPTY)
  showOnHome  Boolean
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @default(now())
  users       UsersOnCollections[]
}

model Product {
  id          Int                  @id @default(autoincrement())
  name        String               @unique
  unit        Unit
  amount      Int                  @default(0)
  limit       Int
  barcode     String?
  files       String[]
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @default(now())
  users       UsersOnProducts[]
}

model UsersOnCollections {
  user         User       @relation(fields: [userId], references: [id])
  userId       Int // relation scalar field (used in the `@relation` attribute above)
  collection   Collection @relation(fields: [collectionId], references: [id])
  collectionId Int // relation scalar field (used in the `@relation` attribute above)
  assignedAt   DateTime   @default(now())
  assignedBy   String

  @@id([userId, collectionId])
}

model UsersOnProducts {
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([userId, productId])
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

enum Brand {
  KINDER
  OTHER
}

enum Type {
  SIMPLE
  DIFFICULT
}

enum Status {
  IN_COLLECTION
  IN_PROGRESS
  IN_WISH_LIST
  EMPTY
}

enum Unit {
  PIECE
  GRAM
}